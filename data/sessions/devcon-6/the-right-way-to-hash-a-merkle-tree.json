{
  "id": "the-right-way-to-hash-a-merkle-tree",
  "sourceId": "DKHHHJ",
  "eventId": "devcon-6",
  "title": "The Right Way to Hash a Merkle Tree",
  "description": "We shill an assembly SHA256 library that is optimized to compute the hash tree root of a Merkle tree. It consists of reusing two publicly available methods: 1. Hardcoding padding block. This method is used in Bitcoin's core client hashing algo.  2. Use CPU-vectorization to hash different branches in parallell. This is Intel's \"multi-buffer\" method.  Initial benchmarks show up to 1200% improvement on hashing of large lists on AVX512.  A GoAssembly version is used by prysm.",
  "track": "Developer Infrastructure",
  "type": "Talk",
  "expertise": "Advanced",
  "tags": [
    "Developer Infrastructure",
    "Assembly",
    "sha256",
    "vectorization"
  ],
  "speakers": [
    "potuz"
  ],
  "resources": {
    "slides": "/resources/6/the-right-way-to-hash-a-merkle-tree.pdf"
  },
  "slot": {
    "start": 1665505800000,
    "end": 1665507600000,
    "length": 1800,
    "room": {
      "id": "talk-2",
      "name": "Talk 2",
      "description": "Cold Forest",
      "info": "Floor 3",
      "capacity": 414
    }
  },
  "media": {
    "duration": 1426,
    "language": "en",
    "sources": {
      "youtube": "NfK4np15E64",
      "swarm": "e7a4f15561bbdcdb2c0071b4554ac895f0e88df53e3775bf08f08b44ff8e2a26"
    }
  }
}